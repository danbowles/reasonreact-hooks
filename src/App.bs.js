// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Axios = require("axios");
var React = require("react");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function str(prim) {
  return prim;
}

function arr(prim) {
  return prim;
}

function volumeInfo(volumeInfo$1) {
  return /* record */[
          /* title */Json_decode.field("title", Json_decode.string, volumeInfo$1),
          /* publishedDate */Json_decode.field("publishedDate", Json_decode.string, volumeInfo$1)
        ];
}

function book(book$1) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, book$1),
          /* meta */Json_decode.field("volumeInfo", volumeInfo, book$1)
        ];
}

function books(books$1) {
  return /* record */[/* items */Json_decode.field("items", (function (param) {
                  return Json_decode.array(book, param);
                }), books$1)];
}

var Decode = /* module */[
  /* volumeInfo */volumeInfo,
  /* book */book,
  /* books */books
];

function getBookImg(id) {
  return "http://books.google.com/books/content?id=" + (id + "&printsec=frontcover&img=1&zoom=1&source=gbs_api");
}

function App(Props) {
  var match = React.useState((function () {
          return "";
        }));
  var setSearchTerm = match[1];
  var searchTerm = match[0];
  var match$1 = React.useState((function () {
          return /* array */[];
        }));
  var setBooks = match$1[1];
  var fetchBooks = function (param) {
    return Axios.get("https://www.googleapis.com/books/v1/volumes?q=" + searchTerm).then((function (response) {
                      return response.data;
                    })).then((function (json) {
                    var decodedBooks = books(json);
                    return Promise.resolve(Curry._1(setBooks, (function (param) {
                                      return decodedBooks[/* items */0];
                                    })));
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), /* () */0));
                }));
  };
  var onSearchTermChange = function ($$event) {
    return Curry._1(setSearchTerm, $$event.target.value);
  };
  var onSubmitSearchForm = function ($$event) {
    fetchBooks(/* () */0);
    $$event.preventDefault();
    return /* () */0;
  };
  var booksList = $$Array.map((function (book) {
          return React.createElement("li", {
                      key: book[/* id */0]
                    }, React.createElement("div", undefined, React.createElement("img", {
                              alt: book[/* meta */1][/* title */0],
                              src: getBookImg(book[/* id */0])
                            }), React.createElement("h3", undefined, book[/* meta */1][/* title */0]), React.createElement("p", undefined, book[/* meta */1][/* publishedDate */1])));
        }), match$1[0]);
  return React.createElement("section", undefined, React.createElement("form", {
                  action: "?"
                }, React.createElement("label", undefined, React.createElement("h1", undefined, "Search for Books"), React.createElement("input", {
                          placeholder: "microservice, restful, etc",
                          value: searchTerm,
                          onChange: onSearchTermChange
                        }), React.createElement("button", {
                          onClick: onSubmitSearchForm
                        }, "Search"))), React.createElement("ul", undefined, booksList));
}

var make = App;

exports.str = str;
exports.arr = arr;
exports.Decode = Decode;
exports.getBookImg = getBookImg;
exports.make = make;
/* axios Not a pure module */
